# GitHub Actions workflow for automated testing and deployment
# This pipeline builds, tests, and deploys our California Housing ML API
name: Build, Test, and Push API

# Trigger the workflow on pushes and pull requests to main branch
on:
  push:
    branches: [ main, ASIF-data-processing-phase-1 ]
  pull_request:
    branches: [ main ]

# Define the CI/CD job
jobs:
  build-test-push:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the repository code
    - name: Checkout Code
      uses: actions/checkout@v3
    
    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    # Step 3: Install all required dependencies
    # This includes API dependencies, testing dependencies, and ML libraries
    - name: Install All Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r api/requirements.txt -r api/requirements-dev.txt pandas scikit-learn
    
    # Step 5: Code quality checks with linting and formatting
    # Ensures code follows Python style guidelines and best practices
    - name: Lint with Flake8 and Black
      run: |
        # Install linting tools
        pip install flake8
        
        # Run flake8 for style guide enforcement
        flake8 api/ --max-line-length=88 --extend-ignore=E203,W503,W293,W291
    
    # Step 6: Run automated tests
    # Execute pytest against the freshly generated data and API code
    - name: Run Pytest
      run: |
        # Run all tests in the api/tests directory
        pytest api/tests/ -v
    
    # Step 7: Login to Docker Hub for image publishing
    # Only runs if previous steps succeed
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # Step 8: Build and push Docker image
    # Only executes on pushes to main branch (not on pull requests)
    # Creates tagged images for both specific commit and latest
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      if: github.ref == 'refs/heads/main'
      with:
        # Build context is the api directory containing Dockerfile
        context: ./api
        
        # Push to Docker Hub registry
        push: true
        
        # Tag with both commit SHA and 'latest' for flexibility
        # Replace 'your-dockerhub-username' with actual DockerHub username
        tags: |
          your-dockerhub-username/mlops-california-housing:${{ github.sha }}
          your-dockerhub-username/mlops-california-housing:latest